properties:


  - name: on_entity_collision_callbacks
    type: std::map<void*, std::function<void()>>
    init_with: '{}'
    exposed: true


methods:


  - name: render_hud
    virtual: true
    body: |
      return;


  - name: end_state_achieved
    type: bool
    virtual: true
    body: |
      return false;


  - name: interact_with_focused_object
    type: bool
    virtual: true
    parameters:
      - name: inspectable_entity_that_player_is_currently_colliding_with
        type: Krampus24::Gameplay::Entities::Base*
        default_argument: nullptr
    body: |
      // Return "true" if an interaction occurred (otherwise it will indicate to the Gameplay/Screen that nothing
      // happened, it may play a "no interaction" sound, for example)
      return false;


  - name: has_on_collision_callback
    type: bool
    parameters:
      - name: entity
        type: void*
        default_argument: nullptr
    body: |
      return on_entity_collision_callbacks.find(entity) != on_entity_collision_callbacks.end();


  - name: call_on_collision_callback
    parameters:
      - name: entity
        type: void*
        default_argument: nullptr
    guards: [ has_on_collision_callback(entity) ]
    body: |
      on_entity_collision_callbacks[entity]();
      return;


dependencies:


  - symbol: Krampus24::Gameplay::Entities::Base
    headers: [ Krampus24/Gameplay/Entities/Base.hpp ]


