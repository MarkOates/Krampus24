<!DOCTYPE html>
<head>
<style>
html
{
  background-color: #09090c;
  color: #dfdfdf;
}
*
{
  font-family: 'Arial';
  padding: 3px 20px;
}
table td
{
  padding: 3px 20px;
}
.property
{
  color: dodgerblue;
}
.private_property
{
  color: aliceblue;
}

.method
{
  color: orange;
}

.private_method
{
  color: pink;
}

.dependency
{
  color: #9f9fa1;
}

.component
{
  padding: 20 10 20 10;
  margin: 20 10 20 10;
  background-color: #1a1a1c;
}

.component h3
{
}
</style>
</head>
<body>
<h1>Table of Contents</h1>
<ul>
  <li><a href="#quintessence/Krampus24/BlenderBlockingLoader.q.yml">quintessence/Krampus24/BlenderBlockingLoader.q.yml</a></li>
  <li><a href="#quintessence/Krampus24/BlenderBlockingLoaderBlock.q.yml">quintessence/Krampus24/BlenderBlockingLoaderBlock.q.yml</a></li>
  <li><a href="#quintessence/Krampus24/BlenderBlockingLoaderEntity.q.yml">quintessence/Krampus24/BlenderBlockingLoaderEntity.q.yml</a></li>
  <li><a href="#quintessence/Krampus24/Game/Configurations/Main.q.yml">quintessence/Krampus24/Game/Configurations/Main.q.yml</a></li>
  <li><a href="#quintessence/Krampus24/Game/Scripting/Tree.q.yml">quintessence/Krampus24/Game/Scripting/Tree.q.yml</a></li>
  <li><a href="#quintessence/Krampus24/GameProgressAndStateInfo.q.yml">quintessence/Krampus24/GameProgressAndStateInfo.q.yml</a></li>
  <li><a href="#quintessence/Krampus24/Gameplay/Entities/Base.q.yml">quintessence/Krampus24/Gameplay/Entities/Base.q.yml</a></li>
  <li><a href="#quintessence/Krampus24/Gameplay/Entities/Hen.q.yml">quintessence/Krampus24/Gameplay/Entities/Hen.q.yml</a></li>
  <li><a href="#quintessence/Krampus24/Gameplay/Level.q.yml">quintessence/Krampus24/Gameplay/Level.q.yml</a></li>
  <li><a href="#quintessence/Krampus24/Gameplay/Screen.q.yml">quintessence/Krampus24/Gameplay/Screen.q.yml</a></li>
  <li><a href="#quintessence/Krampus24/Gameplay/ScriptingInterface.q.yml">quintessence/Krampus24/Gameplay/ScriptingInterface.q.yml</a></li>
  <li><a href="#quintessence/Krampus24/Testing/WithConstructFixture.q.yml">quintessence/Krampus24/Testing/WithConstructFixture.q.yml</a></li>
</ul>
<h1>Components</h1>
<br><br><br>
<br><br><br>
<ul>
  <div class="component">
    <h3 id="quintessence/Krampus24/BlenderBlockingLoader.q.yml">quintessence/Krampus24/BlenderBlockingLoader.q.yml</h3>
    <h3>Overview</h3>
    <p>{"notes"=>["To use, build the map using Blender. Your blender file will need to have 2 collections \"blocking\" and \"entities\"", "Would like to add \"visual\" and \"collision\""]}</p>    <h3>Properties</h3>
<div class="property-box properties">     <table>
<tr>
  <td class="property">filename</td>
  <td class="property">std::string</td>
</tr>
<tr>
  <td class="property">blocks</td>
  <td class="property">std::vector&lt;Krampus24::BlenderBlockingLoaderBlock&gt;</td>
</tr>
<tr>
  <td class="property">entities</td>
  <td class="property">std::vector&lt;Krampus24::BlenderBlockingLoaderEntity&gt;</td>
</tr>
<tr>
  <td class="property">loaded</td>
  <td class="property">bool</td>
</tr>
    </table>
</div>    <h3>Methods</h3>
<div class="property-box methods">     <table>
<tr>
  <td class="method">void</td>
  <td class="method"><b>for_each_entity</b>(std::function&lt;void(Krampus24::BlenderBlockingLoaderEntity*)&gt; function={})</td>
</tr>
<tr>
  <td class="method">AllegroFlare::TileMaps::TileMap&lt;float&gt;</td>
  <td class="method"><b>assemble_height_map</b>(float floor_height=-10.0)</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>load</b>()</td>
</tr>
<tr>
  <td class="private_method">void</td>
  <td class="private_method"><b>build_blocks</b>()</td>
</tr>
<tr>
  <td class="method">std::vector&lt;std::pair&lt;int, int&gt;&gt;</td>
  <td class="method"><b>tiles_within</b>(float x=0.0f, float y=0.0f, float width=1.0f, float height=1.0f, int tile_width=16, int tile_height=16)</td>
</tr>
    </table>
</div>    <h3>Dependencies</h3>
<div class="property-box dependencies">     <table>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;std::istringstream&quot;, &quot;headers&quot;=&gt;[&quot;sstream&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Logger&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Logger.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Vec3D&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Vec3D.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus24::BlenderBlockingLoaderBlock&quot;, &quot;headers&quot;=&gt;[&quot;Krampus24/BlenderBlockingLoaderBlock.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus24::BlenderBlockingLoaderEntity&quot;, &quot;headers&quot;=&gt;[&quot;Krampus24/BlenderBlockingLoaderEntity.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::TileMaps::TileMap&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/TileMaps/TileMap.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Int2D&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Int2D.hpp&quot;]}</td>
</tr>
    </table>
</div>  </div>
</ul>
<br><br><br>
<br><br><br>
<ul>
  <div class="component">
    <h3 id="quintessence/Krampus24/BlenderBlockingLoaderBlock.q.yml">quintessence/Krampus24/BlenderBlockingLoaderBlock.q.yml</h3>
    <p>(This component does not include supplementary documentation)</p>
    <h3>Properties</h3>
<div class="property-box properties">     <table>
<tr>
  <td class="property">name</td>
  <td class="property">std::string</td>
</tr>
<tr>
  <td class="property">min_coordinates</td>
  <td class="property">AllegroFlare::Vec3D</td>
</tr>
<tr>
  <td class="property">max_coordinates</td>
  <td class="property">AllegroFlare::Vec3D</td>
</tr>
<tr>
  <td class="property">scale</td>
  <td class="property">AllegroFlare::Vec3D</td>
</tr>
<tr>
  <td class="property">tile_coordinates</td>
  <td class="property">std::vector&lt;std::pair&lt;int, int&gt;&gt;</td>
</tr>
<tr>
  <td class="property">height</td>
  <td class="property">float</td>
</tr>
    </table>
</div>    <h3>Methods</h3>
<div class="property-box methods">     <table>
    </table>
</div>    <h3>Dependencies</h3>
<div class="property-box dependencies">     <table>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Vec3D&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Vec3D.hpp&quot;]}</td>
</tr>
    </table>
</div>  </div>
</ul>
<br><br><br>
<br><br><br>
<ul>
  <div class="component">
    <h3 id="quintessence/Krampus24/BlenderBlockingLoaderEntity.q.yml">quintessence/Krampus24/BlenderBlockingLoaderEntity.q.yml</h3>
    <p>(This component does not include supplementary documentation)</p>
    <h3>Properties</h3>
<div class="property-box properties">     <table>
<tr>
  <td class="property">name</td>
  <td class="property">std::string</td>
</tr>
<tr>
  <td class="property">location</td>
  <td class="property">AllegroFlare::Vec3D</td>
</tr>
<tr>
  <td class="property">rotation</td>
  <td class="property">AllegroFlare::Vec3D</td>
</tr>
<tr>
  <td class="property">scale</td>
  <td class="property">AllegroFlare::Vec3D</td>
</tr>
    </table>
</div>    <h3>Methods</h3>
<div class="property-box methods">     <table>
<tr>
  <td class="method">std::string</td>
  <td class="method"><b>get_name_unversioned</b>()</td>
</tr>
<tr>
  <td class="method">std::string</td>
  <td class="method"><b>remove_dot_instance</b>(std::string string=&quot;[unset-string]&quot;)</td>
</tr>
    </table>
</div>    <h3>Dependencies</h3>
<div class="property-box dependencies">     <table>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Vec3D&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Vec3D.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;std::all_of&quot;, &quot;headers&quot;=&gt;[&quot;algorithm&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;std::isdigit&quot;, &quot;headers&quot;=&gt;[&quot;cctype&quot;]}</td>
</tr>
    </table>
</div>  </div>
</ul>
<br><br><br>
<br><br><br>
<ul>
  <div class="component">
    <h3 id="quintessence/Krampus24/Game/Configurations/Main.q.yml">quintessence/Krampus24/Game/Configurations/Main.q.yml</h3>
    <p>(This component does not include supplementary documentation)</p>
    <h3>Properties</h3>
<div class="property-box properties">     <table>
<tr>
  <td class="property">primary_gameplay_screen</td>
  <td class="property">Krampus24::Gameplay::Screen*</td>
</tr>
<tr>
  <td class="property">primary_gameplay_subscreen</td>
  <td class="property">AllegroFlare::Screens::Subscreen::Screen*</td>
</tr>
<tr>
  <td class="property">pause_screen</td>
  <td class="property">AllegroFlare::Screens::PauseScreen*</td>
</tr>
<tr>
  <td class="property">TYPE</td>
  <td class="property">char*</td>
</tr>
    </table>
</div>    <h3>Methods</h3>
<div class="property-box methods">     <table>
<tr>
  <td class="method">std::string</td>
  <td class="method"><b>app_icon_1024_filename</b>()</td>
</tr>
<tr>
  <td class="method">std::string</td>
  <td class="method"><b>app_title</b>()</td>
</tr>
<tr>
  <td class="method">std::string</td>
  <td class="method"><b>title_screen_title</b>()</td>
</tr>
<tr>
  <td class="method">std::string</td>
  <td class="method"><b>primary_display_icon_filename</b>()</td>
</tr>
<tr>
  <td class="method">std::vector&lt;std::tuple&lt;std::string, AllegroFlare::Achievement*, bool, bool&gt;&gt;</td>
  <td class="method"><b>build_achievements</b>()</td>
</tr>
<tr>
  <td class="method">AllegroFlare::Screens::Gameplay*</td>
  <td class="method"><b>create_primary_gameplay_screen</b>(AllegroFlare::Runners::Complete* runner=nullptr)</td>
</tr>
<tr>
  <td class="method">AllegroFlare::Screens::Subscreen::Screen*</td>
  <td class="method"><b>create_primary_gameplay_subscreen</b>(AllegroFlare::Runners::Complete* runner=nullptr)</td>
</tr>
<tr>
  <td class="method">AllegroFlare::Screens::PauseScreen*</td>
  <td class="method"><b>create_pause_screen</b>(AllegroFlare::Runners::Complete* runner=nullptr)</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>handle_primary_gameplay_screen_paused</b>()</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>handle_primary_gameplay_screen_unpaused</b>()</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>handle_primary_gameplay_screen_finished</b>()</td>
</tr>
<tr>
  <td class="method">std::vector&lt;AllegroFlare::Elements::StoryboardPages::Base *&gt;</td>
  <td class="method"><b>create_intro_logos_storyboard_pages</b>()</td>
</tr>
<tr>
  <td class="method">std::vector&lt;AllegroFlare::Elements::StoryboardPages::Base *&gt;</td>
  <td class="method"><b>create_intro_storyboard_pages</b>()</td>
</tr>
<tr>
  <td class="method">std::vector&lt;std::pair&lt;std::string, std::string&gt;&gt;</td>
  <td class="method"><b>build_title_screen_menu_options</b>()</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>load_audio_controller</b>(AllegroFlare::AudioController* audio_controller=nullptr)</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>load_last_played_session_or_start_new</b>(AllegroFlare::GameSession* game_session=nullptr)</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>setup_new_game_progress_and_state_info</b>(AllegroFlare::GameSession* game_session=nullptr)</td>
</tr>
<tr>
  <td class="method">std::vector&lt;AllegroFlare::LoadASavedGame::SaveSlots::Base*&gt;</td>
  <td class="method"><b>build_save_slots_for_load_a_saved_game_screen</b>()</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>handle_game_event</b>(AllegroFlare::GameEvent* game_event=nullptr)</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>continue_from_last_save</b>()</td>
</tr>
<tr>
  <td class="method">std::vector&lt;std::pair&lt;std::string, std::string&gt;&gt;</td>
  <td class="method"><b>build_level_list_for_level_select_screen_by_identifier</b>(std::string identifier=&quot;[unset-identifier]&quot;)</td>
</tr>
<tr>
  <td class="method">AllegroFlare::DialogTree::NodeBank</td>
  <td class="method"><b>build_dialog_bank_by_identifier</b>(std::string identifier=&quot;[identifier-discarded]&quot;)</td>
</tr>
<tr>
  <td class="method">AllegroFlare::Levels::Base*</td>
  <td class="method"><b>load_level_by_identifier</b>(std::string identifier=&quot;[unset-identifier]&quot;)</td>
</tr>
    </table>
</div>    <h3>Dependencies</h3>
<div class="property-box dependencies">     <table>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::GameConfigurations::Complete&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/GameConfigurations/Complete.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Levels::Base&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Levels/Base.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::DialogTree::NodeBank&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/DialogTree/NodeBank.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::DialogTree::NodeBankFactory&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/DialogTree/NodeBankFactory.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::DialogTree::Nodes::Wait&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/DialogTree/Nodes/Wait.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::DialogTree::Nodes::ExitProgram&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/DialogTree/Nodes/ExitProgram.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::DialogTree::Nodes::MultipageWithOptions&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/DialogTree/Nodes/MultipageWithOptions.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::DialogTree::NodeOptions::GoToNode&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/DialogTree/NodeOptions/GoToNode.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::DialogTree::NodeOptions::ExitDialog&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/DialogTree/NodeOptions/ExitDialog.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus24::Gameplay::Level&quot;, &quot;headers&quot;=&gt;[&quot;Krampus24/Gameplay/Level.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Achievement&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Achievement.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Elements::StoryboardPages::Base&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Elements/StoryboardPages/Base.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::GameSession&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/GameSession.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::GameProgressAndStateInfos::Base&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/GameProgressAndStateInfos/Base.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::LoadASavedGame::SaveSlots::Base&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/LoadASavedGame/SaveSlots/Base.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus24::Gameplay::Screen&quot;, &quot;headers&quot;=&gt;[&quot;Krampus24/Gameplay/Screen.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Screens::Gameplay&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Screens/Gameplay.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Runners::Complete&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Runners/Complete.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::AudioController&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/AudioController.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::EventNames&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/EventNames.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::GameEventDatas::AchievementUnlocked&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/GameEventDatas/AchievementUnlocked.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::GameEvent&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/GameEvent.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Screens::PauseScreen&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Screens/PauseScreen.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Screens::Subscreen::Screen&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Screens/Subscreen/Screen.hpp&quot;]}</td>
</tr>
    </table>
</div>  </div>
</ul>
<br><br><br>
<br><br><br>
<ul>
  <div class="component">
    <h3 id="quintessence/Krampus24/Game/Scripting/Tree.q.yml">quintessence/Krampus24/Game/Scripting/Tree.q.yml</h3>
    <p>(This component does not include supplementary documentation)</p>
    <h3>Properties</h3>
<div class="property-box properties">     <table>
<tr>
  <td class="property">font_bin</td>
  <td class="property">AllegroFlare::FontBin*</td>
</tr>
<tr>
  <td class="property">entities</td>
  <td class="property">std::vector&lt;Krampus24::Gameplay::Entities::Base*&gt;*</td>
</tr>
<tr>
  <td class="property">primary_power_coil_collected</td>
  <td class="property">bool</td>
</tr>
<tr>
  <td class="property">primary_power_coil_returned_to_ship</td>
  <td class="property">bool</td>
</tr>
<tr>
  <td class="property">collision_observer</td>
  <td class="property">AllegroFlare::CollisionObservers::Simple*</td>
</tr>
<tr>
  <td class="property">initialized</td>
  <td class="property">bool</td>
</tr>
    </table>
</div>    <h3>Methods</h3>
<div class="property-box methods">     <table>
<tr>
  <td class="method">void</td>
  <td class="method"><b>render_hud</b>()</td>
</tr>
<tr>
  <td class="method">bool</td>
  <td class="method"><b>end_state_achieved</b>()</td>
</tr>
<tr>
  <td class="method">bool</td>
  <td class="method"><b>a_0th_entity_exists</b>()</td>
</tr>
<tr>
  <td class="method">Krampus24::Gameplay::Entities::Base*</td>
  <td class="method"><b>find_0th_entity</b>()</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>initialize</b>()</td>
</tr>
<tr>
  <td class="method">bool</td>
  <td class="method"><b>entity_with_name_exists</b>(std::string name=&quot;[unset-name]&quot;)</td>
</tr>
<tr>
  <td class="method">Krampus24::Gameplay::Entities::Base*</td>
  <td class="method"><b>find_entity_by_name_or_throw</b>(std::string name=&quot;[unset-name]&quot;)</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>link_elevators</b>(std::string elevator_a_name=&quot;[unset-elevator_a_name]&quot;, std::string elevator_b_name=&quot;[unset-elevator_b_name]&quot;)</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>travel_player_to_elevators_target</b>(std::string entering_elevator_name=&quot;[unset-entering_elevator_name]&quot;)</td>
</tr>
<tr>
  <td class="private_method">void</td>
  <td class="private_method"><b>build_on_collision_callbacks</b>()</td>
</tr>
<tr>
  <td class="method">ALLEGRO_FONT*</td>
  <td class="method"><b>obtain_hud_font</b>()</td>
</tr>
    </table>
</div>    <h3>Dependencies</h3>
<div class="property-box dependencies">     <table>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus24::Gameplay::ScriptingInterface&quot;, &quot;headers&quot;=&gt;[&quot;Krampus24/Gameplay/ScriptingInterface.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus24::Gameplay::Entities::Base&quot;, &quot;headers&quot;=&gt;[&quot;Krampus24/Gameplay/Entities/Base.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::CollisionObservers::Simple&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/CollisionObservers/Simple.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus24::Gameplay::Screen&quot;, &quot;headers&quot;=&gt;[&quot;Krampus24/Gameplay/Screen.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::FontBin&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/FontBin.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;ALLEGRO_FONT&quot;, &quot;headers&quot;=&gt;[&quot;allegro5/allegro_font.h&quot;]}</td>
</tr>
    </table>
</div>  </div>
</ul>
<br><br><br>
<br><br><br>
<ul>
  <div class="component">
    <h3 id="quintessence/Krampus24/GameProgressAndStateInfo.q.yml">quintessence/Krampus24/GameProgressAndStateInfo.q.yml</h3>
    <p>(This component does not include supplementary documentation)</p>
    <h3>Properties</h3>
<div class="property-box properties">     <table>
<tr>
  <td class="property">player_inventory_items</td>
  <td class="property">std::vector&lt;std::string&gt;</td>
</tr>
<tr>
  <td class="property">TYPE</td>
  <td class="property">char*</td>
</tr>
    </table>
</div>    <h3>Methods</h3>
<div class="property-box methods">     <table>
<tr>
  <td class="method">void</td>
  <td class="method"><b>add_player_inventory_item</b>(std::string item_identifier=&quot;[unset-item_identifier]&quot;)</td>
</tr>
<tr>
  <td class="method">std::string</td>
  <td class="method"><b>export_to_string</b>()</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>import_from_string</b>(std::string data_string=&quot;[unset-data_string]&quot;)</td>
</tr>
    </table>
</div>    <h3>Dependencies</h3>
<div class="property-box dependencies">     <table>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::GameProgressAndStateInfos::Base&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/GameProgressAndStateInfos/Base.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus24::JSONLoaders::Krampus24::GameProgressAndStateInfo&quot;, &quot;headers&quot;=&gt;[&quot;Krampus24/JSONLoaders/Krampus24/GameProgressAndStateInfo.hpp&quot;]}</td>
</tr>
    </table>
</div>  </div>
</ul>
<br><br><br>
<br><br><br>
<ul>
  <div class="component">
    <h3 id="quintessence/Krampus24/Gameplay/Entities/Base.q.yml">quintessence/Krampus24/Gameplay/Entities/Base.q.yml</h3>
    <p>(This component does not include supplementary documentation)</p>
    <h3>Properties</h3>
<div class="property-box properties">     <table>
<tr>
  <td class="property">type</td>
  <td class="property">std::string</td>
</tr>
<tr>
  <td class="property">model</td>
  <td class="property">AllegroFlare::Model3D*</td>
</tr>
<tr>
  <td class="property">texture</td>
  <td class="property">ALLEGRO_BITMAP*</td>
</tr>
<tr>
  <td class="property">placement</td>
  <td class="property">AllegroFlare::Placement3D</td>
</tr>
<tr>
  <td class="property">velocity</td>
  <td class="property">AllegroFlare::Placement3D</td>
</tr>
<tr>
  <td class="property">hit_box_2d</td>
  <td class="property">AllegroFlare::Physics::AABB2D</td>
</tr>
<tr>
  <td class="property">player_input_controller</td>
  <td class="property">AllegroFlare::PlayerInputControllers::Base*</td>
</tr>
<tr>
  <td class="property">box_corners</td>
  <td class="property">std::vector&lt;AllegroFlare::Vec3D&gt;</td>
</tr>
<tr>
  <td class="property">box_color</td>
  <td class="property">ALLEGRO_COLOR</td>
</tr>
<tr>
  <td class="property">name</td>
  <td class="property">std::string</td>
</tr>
<tr>
  <td class="property">active</td>
  <td class="property">bool</td>
</tr>
<tr>
  <td class="property">visible</td>
  <td class="property">bool</td>
</tr>
<tr>
  <td class="property">affected_by_environmental_forces</td>
  <td class="property">bool</td>
</tr>
<tr>
  <td class="property">collides_with_environment</td>
  <td class="property">bool</td>
</tr>
<tr>
  <td class="property">collides_with_player</td>
  <td class="property">bool</td>
</tr>
<tr>
  <td class="property">collides_with_enemies</td>
  <td class="property">bool</td>
</tr>
<tr>
  <td class="property">elevator__target</td>
  <td class="property">Krampus24::Gameplay::Entities::Base*</td>
</tr>
<tr>
  <td class="property">TYPE</td>
  <td class="property">char*</td>
</tr>
    </table>
</div>    <h3>Methods</h3>
<div class="property-box methods">     <table>
<tr>
  <td class="method">bool</td>
  <td class="method"><b>has_player_input_controller</b>()</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>destroy</b>()</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>on_time_step</b>(double time_step=0.0f, double time_now=0.0f)</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>on_tile_map_collision_stepper_step</b>(AllegroFlare::Physics::TileMapCollisionStepperStepResult* collision_step_result=nullptr)</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>on_enter_player_bbox_collision</b>(Krampus24::Gameplay::Entities::Base* player_entity=nullptr)</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>on_exit_player_bbox_collision</b>(Krampus24::Gameplay::Entities::Base* player_entity=nullptr)</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>on_enter_player_position_collision</b>(Krampus24::Gameplay::Entities::Base* player_entity=nullptr)</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>on_exit_player_position_collision</b>(Krampus24::Gameplay::Entities::Base* player_entity=nullptr)</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>on_player_inspect_or_use</b>()</td>
</tr>
<tr>
  <td class="method">bool</td>
  <td class="method"><b>collides</b>(Krampus24::Gameplay::Entities::Base* other=nullptr)</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>calculate_box_corners</b>()</td>
</tr>
<tr>
  <td class="method">ALLEGRO_COLOR</td>
  <td class="method"><b>build_color</b>(float opacity=1.0f)</td>
</tr>
<tr>
  <td class="method">std::vector&lt;ALLEGRO_VERTEX&gt;</td>
  <td class="method"><b>build_line_list_vertices</b>()</td>
</tr>
<tr>
  <td class="method">std::vector&lt;ALLEGRO_VERTEX&gt;</td>
  <td class="method"><b>build_triangle_list_vertices_for_faces</b>()</td>
</tr>
    </table>
</div>    <h3>Dependencies</h3>
<div class="property-box dependencies">     <table>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::SceneGraph::Entities::Base&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/SceneGraph/Entities/Base.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Model3D&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Model3D.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;ALLEGRO_BITMAP&quot;, &quot;headers&quot;=&gt;[&quot;allegro5/allegro.h&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Placement3D&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Placement3D.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Physics::AABB2D&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Physics/AABB2D.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Physics::TileMapCollisionStepperStepResult&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Physics/TileMapCollisionStepperStepResult.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus24::Gameplay::Entities::Base&quot;, &quot;headers&quot;=&gt;[&quot;Krampus24/Gameplay/Entities/Base.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::PlayerInputControllers::Base&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/PlayerInputControllers/Base.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;ALLEGRO_COLOR&quot;, &quot;headers&quot;=&gt;[&quot;allegro5/allegro.h&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;ALLEGRO_VERTEX&quot;, &quot;headers&quot;=&gt;[&quot;allegro5/allegro_primitives.h&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Vec3D&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Vec3D.hpp&quot;]}</td>
</tr>
    </table>
</div>  </div>
</ul>
<br><br><br>
<br><br><br>
<ul>
  <div class="component">
    <h3 id="quintessence/Krampus24/Gameplay/Entities/Hen.q.yml">quintessence/Krampus24/Gameplay/Entities/Hen.q.yml</h3>
    <p>(This component does not include supplementary documentation)</p>
    <h3>Properties</h3>
<div class="property-box properties">     <table>
<tr>
  <td class="property">movement_direction</td>
  <td class="property">AllegroFlare::Vec3D</td>
</tr>
<tr>
  <td class="property">movement_velocity</td>
  <td class="property">float</td>
</tr>
<tr>
  <td class="property">initialized</td>
  <td class="property">bool</td>
</tr>
<tr>
  <td class="property">BLENDER_IDENTIFIER</td>
  <td class="property">char*</td>
</tr>
    </table>
</div>    <h3>Methods</h3>
<div class="property-box methods">     <table>
<tr>
  <td class="method">Krampus24::Gameplay::Entities::Hen*</td>
  <td class="method"><b>construct</b>(AllegroFlare::ModelBin* model_bin=nullptr, AllegroFlare::BitmapBin* bitmap_bin=nullptr)</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>on_time_step</b>(double time_step=0.0f, double time_now=0.0f)</td>
</tr>
    </table>
</div>    <h3>Dependencies</h3>
<div class="property-box dependencies">     <table>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus24::Gameplay::Entities::Base&quot;, &quot;headers&quot;=&gt;[&quot;Krampus24/Gameplay/Entities/Base.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus24::Gameplay::Entities::Hen&quot;, &quot;headers&quot;=&gt;[&quot;Krampus24/Gameplay/Entities/Hen.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::BitmapBin&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/BitmapBin.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::ModelBin&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/ModelBin.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Vec3D&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Vec3D.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;std::sin&quot;, &quot;headers&quot;=&gt;[&quot;cmath&quot;]}</td>
</tr>
    </table>
</div>  </div>
</ul>
<br><br><br>
<br><br><br>
<ul>
  <div class="component">
    <h3 id="quintessence/Krampus24/Gameplay/Level.q.yml">quintessence/Krampus24/Gameplay/Level.q.yml</h3>
    <p>(This component does not include supplementary documentation)</p>
    <h3>Properties</h3>
<div class="property-box properties">     <table>
<tr>
  <td class="property">title</td>
  <td class="property">std::string</td>
</tr>
<tr>
  <td class="property">TYPE</td>
  <td class="property">char*</td>
</tr>
    </table>
</div>    <h3>Methods</h3>
<div class="property-box methods">     <table>
    </table>
</div>    <h3>Dependencies</h3>
<div class="property-box dependencies">     <table>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Levels::Base&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Levels/Base.hpp&quot;]}</td>
</tr>
    </table>
</div>  </div>
</ul>
<br><br><br>
<br><br><br>
<ul>
  <div class="component">
    <h3 id="quintessence/Krampus24/Gameplay/Screen.q.yml">quintessence/Krampus24/Gameplay/Screen.q.yml</h3>
    <p>(This component does not include supplementary documentation)</p>
    <h3>Properties</h3>
<div class="property-box properties">     <table>
<tr>
  <td class="property">data_folder_path</td>
  <td class="property">std::string</td>
</tr>
<tr>
  <td class="property">event_emitter</td>
  <td class="property">AllegroFlare::EventEmitter*</td>
</tr>
<tr>
  <td class="property">bitmap_bin</td>
  <td class="property">AllegroFlare::BitmapBin*</td>
</tr>
<tr>
  <td class="property">font_bin</td>
  <td class="property">AllegroFlare::FontBin*</td>
</tr>
<tr>
  <td class="property">model_bin</td>
  <td class="property">AllegroFlare::ModelBin*</td>
</tr>
<tr>
  <td class="property">game_configuration</td>
  <td class="property">AllegroFlare::GameConfigurations::Base*</td>
</tr>
<tr>
  <td class="property">hud_camera</td>
  <td class="property">AllegroFlare::Camera2D</td>
</tr>
<tr>
  <td class="property">live_camera</td>
  <td class="property">AllegroFlare::Camera3D</td>
</tr>
<tr>
  <td class="property">entities</td>
  <td class="property">std::vector&lt;Krampus24::Gameplay::Entities::Base*&gt;</td>
</tr>
<tr>
  <td class="property">collision_mesh</td>
  <td class="property">AllegroFlare::Physics::CollisionMesh*</td>
</tr>
<tr>
  <td class="property">visual_mesh</td>
  <td class="property">AllegroFlare::Model3D*</td>
</tr>
<tr>
  <td class="property">player_spawn_position</td>
  <td class="property">AllegroFlare::Vec3D</td>
</tr>
<tr>
  <td class="property">collision_mesh_identifier</td>
  <td class="property">std::string</td>
</tr>
<tr>
  <td class="property">visual_mesh_identifier</td>
  <td class="property">std::string</td>
</tr>
<tr>
  <td class="property">visual_mesh_texture_identifier</td>
  <td class="property">std::string</td>
</tr>
<tr>
  <td class="property">blocking_filename</td>
  <td class="property">std::string</td>
</tr>
<tr>
  <td class="property">scripting</td>
  <td class="property">Krampus24::Gameplay::ScriptingInterface*</td>
</tr>
<tr>
  <td class="property">build_scripting_instance_func</td>
  <td class="property">std::function&lt;Krampus24::Gameplay::ScriptingInterface*(Krampus24::Gameplay::Screen*)&gt;</td>
</tr>
<tr>
  <td class="property">rendering_visual_mesh</td>
  <td class="property">bool</td>
</tr>
<tr>
  <td class="property">rendering_collision_wiremesh</td>
  <td class="property">bool</td>
</tr>
<tr>
  <td class="property">rendering_entity_models</td>
  <td class="property">bool</td>
</tr>
<tr>
  <td class="property">rendering_entity_bounding_boxes</td>
  <td class="property">bool</td>
</tr>
<tr>
  <td class="property">collision_observer</td>
  <td class="property">AllegroFlare::CollisionObservers::Simple</td>
</tr>
<tr>
  <td class="property">initialized</td>
  <td class="property">bool</td>
</tr>
    </table>
</div>    <h3>Methods</h3>
<div class="property-box methods">     <table>
<tr>
  <td class="method">void</td>
  <td class="method"><b>initialize</b>()</td>
</tr>
<tr>
  <td class="method">Krampus24::Gameplay::Entities::Base*</td>
  <td class="method"><b>build_entity</b>(Krampus24::BlenderBlockingLoaderEntity* entity=nullptr)</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>load_or_reload_meshes</b>()</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>~destruct</b>()</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>on_activate</b>()</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>on_deactivate</b>()</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>load_or_reload_level_mesh</b>()</td>
</tr>
<tr>
  <td class="method">bool</td>
  <td class="method"><b>a_0th_entity_exists</b>()</td>
</tr>
<tr>
  <td class="method">Krampus24::Gameplay::Entities::Base*</td>
  <td class="method"><b>find_0th_entity</b>()</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>create_and_set_player_input_controller_for_0th_entity</b>()</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>update</b>()</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>render</b>()</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>xxxcall_on_finished_callback_func</b>()</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>game_event_func</b>(AllegroFlare::GameEvent* game_event=nullptr)</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>primary_update_func</b>(double time_now=0.0f, double delta_time=1.0f)</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>primary_render_func</b>()</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>key_down_func</b>(ALLEGRO_EVENT* ev=nullptr)</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>key_up_func</b>(ALLEGRO_EVENT* ev=nullptr)</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>virtual_control_button_up_func</b>(AllegroFlare::Player* player=nullptr, AllegroFlare::VirtualControllers::Base* virtual_controller=nullptr, int virtual_controller_button_num=0, bool is_repeat=false)</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>virtual_control_button_down_func</b>(AllegroFlare::Player* player=nullptr, AllegroFlare::VirtualControllers::Base* virtual_controller=nullptr, int virtual_controller_button_num=0, bool is_repeat=false)</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>virtual_control_axis_change_func</b>(ALLEGRO_EVENT* ev=nullptr)</td>
</tr>
<tr>
  <td class="method">ALLEGRO_FONT*</td>
  <td class="method"><b>obtain_hud_font</b>()</td>
</tr>
    </table>
</div>    <h3>Dependencies</h3>
<div class="property-box dependencies">     <table>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;ALLEGRO_EVENT&quot;, &quot;headers&quot;=&gt;[&quot;allegro5/allegro.h&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Screens::Base&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Screens/Base.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::BitmapBin&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/BitmapBin.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::EventEmitter&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/EventEmitter.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::FontBin&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/FontBin.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::ModelBin&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/ModelBin.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;al_is_primitives_addon_initialized&quot;, &quot;headers&quot;=&gt;[&quot;allegro5/allegro_primitives.h&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Player&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Player.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::VirtualControllers::Base&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/VirtualControllers/Base.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus24::Gameplay::Screen&quot;, &quot;headers&quot;=&gt;[&quot;Krampus24/Gameplay/Screen.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::GameConfigurations::Base&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/GameConfigurations/Base.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Game::Configurations::Main&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Game/Configurations/Main.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Gameplay::Level&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Gameplay/Level.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::GameEvent&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/GameEvent.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Physics::CollisionMeshCollisionStepper&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Physics/CollisionMeshCollisionStepper.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Camera3D&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Camera3D.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Model3D&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Model3D.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;std::get&quot;, &quot;headers&quot;=&gt;[&quot;tuple&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Physics::CollisionMesh&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Physics/CollisionMesh.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus24::Gameplay::Entities::Base&quot;, &quot;headers&quot;=&gt;[&quot;Krampus24/Gameplay/Entities/Base.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Routers::Standard&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Routers/Standard.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::RouteEventDatas::ActivateScreenByIdentifier&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/RouteEventDatas/ActivateScreenByIdentifier.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::EventNames&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/EventNames.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Routers::Standard&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Routers/Standard.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::RouteEventDatas::ActivateScreenByIdentifier&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/RouteEventDatas/ActivateScreenByIdentifier.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::EventNames&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/EventNames.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Screens::Gameplay&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Screens/Gameplay.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::PlayerInputControllers::Generic&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/PlayerInputControllers/Generic.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::CollisionObservers::Simple&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/CollisionObservers/Simple.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Camera2D&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Camera2D.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;ALLEGRO_FONT&quot;, &quot;headers&quot;=&gt;[&quot;allegro5/allegro_font.h&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus24::Gameplay::Screen&quot;, &quot;headers&quot;=&gt;[&quot;Krampus24/Gameplay/Screen.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Vec3D&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Vec3D.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus24::BlenderBlockingLoader&quot;, &quot;headers&quot;=&gt;[&quot;Krampus24/BlenderBlockingLoader.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus24::Gameplay::ScriptingInterface&quot;, &quot;headers&quot;=&gt;[&quot;Krampus24/Gameplay/ScriptingInterface.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus24::Game::Scripting::Tree&quot;, &quot;headers&quot;=&gt;[&quot;Krampus24/Game/Scripting/Tree.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus24::BlenderBlockingLoaderEntity&quot;, &quot;headers&quot;=&gt;[&quot;Krampus24/BlenderBlockingLoaderEntity.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus24::Gameplay::Scripting::Empty&quot;, &quot;headers&quot;=&gt;[&quot;Krampus24/Gameplay/Scripting/Empty.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Logger&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Logger.hpp&quot;]}</td>
</tr>
    </table>
</div>  </div>
</ul>
<br><br><br>
<br><br><br>
<ul>
  <div class="component">
    <h3 id="quintessence/Krampus24/Gameplay/ScriptingInterface.q.yml">quintessence/Krampus24/Gameplay/ScriptingInterface.q.yml</h3>
    <p>(This component does not include supplementary documentation)</p>
    <h3>Properties</h3>
<div class="property-box properties">     <table>
<tr>
  <td class="property">on_entity_collision_callbacks</td>
  <td class="property">std::map&lt;void*, std::function&lt;void()&gt;&gt;</td>
</tr>
    </table>
</div>    <h3>Methods</h3>
<div class="property-box methods">     <table>
<tr>
  <td class="method">void</td>
  <td class="method"><b>render_hud</b>()</td>
</tr>
<tr>
  <td class="method">bool</td>
  <td class="method"><b>end_state_achieved</b>()</td>
</tr>
<tr>
  <td class="method">bool</td>
  <td class="method"><b>has_on_collision_callback</b>(void* entity=nullptr)</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>call_on_collision_callback</b>(void* entity=nullptr)</td>
</tr>
    </table>
</div>    <h3>Dependencies</h3>
<p>This class contains no dependencies</p>  </div>
</ul>
<br><br><br>
<br><br><br>
<ul>
  <div class="component">
    <h3 id="quintessence/Krampus24/Testing/WithConstructFixture.q.yml">quintessence/Krampus24/Testing/WithConstructFixture.q.yml</h3>
    <p>(This component does not include supplementary documentation)</p>
    <h3>Properties</h3>
<div class="property-box properties">     <table>
<tr>
  <td class="property">screen</td>
  <td class="property">Krampus24::Gameplay::Screen*</td>
</tr>
    </table>
</div>    <h3>Methods</h3>
<div class="property-box methods">     <table>
<tr>
  <td class="method">void</td>
  <td class="method"><b>SetUp</b>()</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>TearDown</b>()</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>run_test_construct_loop</b>(float num_seconds_until_abort=60.0f)</td>
</tr>
<tr>
  <td class="method">void</td>
  <td class="method"><b>add_entity_to_pool</b>(Krampus24::Gameplay::Entities::Base* entity=nullptr)</td>
</tr>
    </table>
</div>    <h3>Dependencies</h3>
<div class="property-box dependencies">     <table>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::SystemInfo&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/SystemInfo.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::Testing::WithAllegroFlareFrameworksFullFixture&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/Testing/WithAllegroFlareFrameworksFullFixture.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::DialogTree::NodeBank&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/DialogTree/NodeBank.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;AllegroFlare::AudioRepositoryElement&quot;, &quot;headers&quot;=&gt;[&quot;AllegroFlare/AudioRepositoryElement.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus24::Gameplay::Screen&quot;, &quot;headers&quot;=&gt;[&quot;Krampus24/Gameplay/Screen.hpp&quot;]}</td>
</tr>
<tr>
  <td class="dependency">{&quot;symbol&quot;=&gt;&quot;Krampus24::Gameplay::Entities::Base&quot;, &quot;headers&quot;=&gt;[&quot;Krampus24/Gameplay/Entities/Base.hpp&quot;]}</td>
</tr>
    </table>
</div>  </div>
</ul>
<h1>Dependents</h1>
<pre>
{
  "std/istringstream": [
    "Krampus24/BlenderBlockingLoader"
  ],
  "AllegroFlare/Logger": [
    "Krampus24/BlenderBlockingLoader",
    "Krampus24/Gameplay/Screen"
  ],
  "AllegroFlare/Vec3D": [
    "Krampus24/BlenderBlockingLoader",
    "Krampus24/BlenderBlockingLoaderBlock",
    "Krampus24/BlenderBlockingLoaderEntity",
    "Krampus24/Gameplay/Entities/Base",
    "Krampus24/Gameplay/Entities/Hen",
    "Krampus24/Gameplay/Screen"
  ],
  "Krampus24/BlenderBlockingLoaderBlock": [
    "Krampus24/BlenderBlockingLoader"
  ],
  "Krampus24/BlenderBlockingLoaderEntity": [
    "Krampus24/BlenderBlockingLoader",
    "Krampus24/Gameplay/Screen"
  ],
  "AllegroFlare/TileMaps/TileMap": [
    "Krampus24/BlenderBlockingLoader"
  ],
  "AllegroFlare/Int2D": [
    "Krampus24/BlenderBlockingLoader"
  ],
  "std/all_of": [
    "Krampus24/BlenderBlockingLoaderEntity"
  ],
  "std/isdigit": [
    "Krampus24/BlenderBlockingLoaderEntity"
  ],
  "AllegroFlare/GameConfigurations/Complete": [
    "Krampus24/Game/Configurations/Main"
  ],
  "AllegroFlare/Levels/Base": [
    "Krampus24/Game/Configurations/Main",
    "Krampus24/Gameplay/Level"
  ],
  "AllegroFlare/DialogTree/NodeBank": [
    "Krampus24/Game/Configurations/Main",
    "Krampus24/Testing/WithConstructFixture"
  ],
  "AllegroFlare/DialogTree/NodeBankFactory": [
    "Krampus24/Game/Configurations/Main"
  ],
  "AllegroFlare/DialogTree/Nodes/Wait": [
    "Krampus24/Game/Configurations/Main"
  ],
  "AllegroFlare/DialogTree/Nodes/ExitProgram": [
    "Krampus24/Game/Configurations/Main"
  ],
  "AllegroFlare/DialogTree/Nodes/MultipageWithOptions": [
    "Krampus24/Game/Configurations/Main"
  ],
  "AllegroFlare/DialogTree/NodeOptions/GoToNode": [
    "Krampus24/Game/Configurations/Main"
  ],
  "AllegroFlare/DialogTree/NodeOptions/ExitDialog": [
    "Krampus24/Game/Configurations/Main"
  ],
  "Krampus24/Gameplay/Level": [
    "Krampus24/Game/Configurations/Main"
  ],
  "AllegroFlare/Achievement": [
    "Krampus24/Game/Configurations/Main"
  ],
  "AllegroFlare/Elements/StoryboardPages/Base": [
    "Krampus24/Game/Configurations/Main"
  ],
  "AllegroFlare/GameSession": [
    "Krampus24/Game/Configurations/Main"
  ],
  "AllegroFlare/GameProgressAndStateInfos/Base": [
    "Krampus24/Game/Configurations/Main",
    "Krampus24/GameProgressAndStateInfo"
  ],
  "AllegroFlare/LoadASavedGame/SaveSlots/Base": [
    "Krampus24/Game/Configurations/Main"
  ],
  "Krampus24/Gameplay/Screen": [
    "Krampus24/Game/Configurations/Main",
    "Krampus24/Game/Scripting/Tree",
    "Krampus24/Gameplay/Screen",
    "Krampus24/Gameplay/Screen",
    "Krampus24/Testing/WithConstructFixture"
  ],
  "AllegroFlare/Screens/Gameplay": [
    "Krampus24/Game/Configurations/Main",
    "Krampus24/Gameplay/Screen"
  ],
  "AllegroFlare/Runners/Complete": [
    "Krampus24/Game/Configurations/Main"
  ],
  "AllegroFlare/AudioController": [
    "Krampus24/Game/Configurations/Main"
  ],
  "AllegroFlare/EventNames": [
    "Krampus24/Game/Configurations/Main",
    "Krampus24/Gameplay/Screen",
    "Krampus24/Gameplay/Screen"
  ],
  "AllegroFlare/GameEventDatas/AchievementUnlocked": [
    "Krampus24/Game/Configurations/Main"
  ],
  "AllegroFlare/GameEvent": [
    "Krampus24/Game/Configurations/Main",
    "Krampus24/Gameplay/Screen"
  ],
  "AllegroFlare/Screens/PauseScreen": [
    "Krampus24/Game/Configurations/Main"
  ],
  "AllegroFlare/Screens/Subscreen/Screen": [
    "Krampus24/Game/Configurations/Main"
  ],
  "Krampus24/Gameplay/ScriptingInterface": [
    "Krampus24/Game/Scripting/Tree",
    "Krampus24/Gameplay/Screen"
  ],
  "Krampus24/Gameplay/Entities/Base": [
    "Krampus24/Game/Scripting/Tree",
    "Krampus24/Gameplay/Entities/Base",
    "Krampus24/Gameplay/Entities/Hen",
    "Krampus24/Gameplay/Screen",
    "Krampus24/Testing/WithConstructFixture"
  ],
  "AllegroFlare/CollisionObservers/Simple": [
    "Krampus24/Game/Scripting/Tree",
    "Krampus24/Gameplay/Screen"
  ],
  "AllegroFlare/FontBin": [
    "Krampus24/Game/Scripting/Tree",
    "Krampus24/Gameplay/Screen"
  ],
  "ALLEGRO_FONT": [
    "Krampus24/Game/Scripting/Tree",
    "Krampus24/Gameplay/Screen"
  ],
  "Krampus24/JSONLoaders/Krampus24/GameProgressAndStateInfo": [
    "Krampus24/GameProgressAndStateInfo"
  ],
  "AllegroFlare/SceneGraph/Entities/Base": [
    "Krampus24/Gameplay/Entities/Base"
  ],
  "AllegroFlare/Model3D": [
    "Krampus24/Gameplay/Entities/Base",
    "Krampus24/Gameplay/Screen"
  ],
  "ALLEGRO_BITMAP": [
    "Krampus24/Gameplay/Entities/Base"
  ],
  "AllegroFlare/Placement3D": [
    "Krampus24/Gameplay/Entities/Base"
  ],
  "AllegroFlare/Physics/AABB2D": [
    "Krampus24/Gameplay/Entities/Base"
  ],
  "AllegroFlare/Physics/TileMapCollisionStepperStepResult": [
    "Krampus24/Gameplay/Entities/Base"
  ],
  "AllegroFlare/PlayerInputControllers/Base": [
    "Krampus24/Gameplay/Entities/Base"
  ],
  "ALLEGRO_COLOR": [
    "Krampus24/Gameplay/Entities/Base"
  ],
  "ALLEGRO_VERTEX": [
    "Krampus24/Gameplay/Entities/Base"
  ],
  "Krampus24/Gameplay/Entities/Hen": [
    "Krampus24/Gameplay/Entities/Hen"
  ],
  "AllegroFlare/BitmapBin": [
    "Krampus24/Gameplay/Entities/Hen",
    "Krampus24/Gameplay/Screen"
  ],
  "AllegroFlare/ModelBin": [
    "Krampus24/Gameplay/Entities/Hen",
    "Krampus24/Gameplay/Screen"
  ],
  "std/sin": [
    "Krampus24/Gameplay/Entities/Hen"
  ],
  "ALLEGRO_EVENT": [
    "Krampus24/Gameplay/Screen"
  ],
  "AllegroFlare/Screens/Base": [
    "Krampus24/Gameplay/Screen"
  ],
  "AllegroFlare/EventEmitter": [
    "Krampus24/Gameplay/Screen"
  ],
  "al_is_primitives_addon_initialized": [
    "Krampus24/Gameplay/Screen"
  ],
  "AllegroFlare/Player": [
    "Krampus24/Gameplay/Screen"
  ],
  "AllegroFlare/VirtualControllers/Base": [
    "Krampus24/Gameplay/Screen"
  ],
  "AllegroFlare/GameConfigurations/Base": [
    "Krampus24/Gameplay/Screen"
  ],
  "AllegroFlare/Game/Configurations/Main": [
    "Krampus24/Gameplay/Screen"
  ],
  "AllegroFlare/Gameplay/Level": [
    "Krampus24/Gameplay/Screen"
  ],
  "AllegroFlare/Physics/CollisionMeshCollisionStepper": [
    "Krampus24/Gameplay/Screen"
  ],
  "AllegroFlare/Camera3D": [
    "Krampus24/Gameplay/Screen"
  ],
  "std/get": [
    "Krampus24/Gameplay/Screen"
  ],
  "AllegroFlare/Physics/CollisionMesh": [
    "Krampus24/Gameplay/Screen"
  ],
  "AllegroFlare/Routers/Standard": [
    "Krampus24/Gameplay/Screen",
    "Krampus24/Gameplay/Screen"
  ],
  "AllegroFlare/RouteEventDatas/ActivateScreenByIdentifier": [
    "Krampus24/Gameplay/Screen",
    "Krampus24/Gameplay/Screen"
  ],
  "AllegroFlare/PlayerInputControllers/Generic": [
    "Krampus24/Gameplay/Screen"
  ],
  "AllegroFlare/Camera2D": [
    "Krampus24/Gameplay/Screen"
  ],
  "Krampus24/BlenderBlockingLoader": [
    "Krampus24/Gameplay/Screen"
  ],
  "Krampus24/Game/Scripting/Tree": [
    "Krampus24/Gameplay/Screen"
  ],
  "Krampus24/Gameplay/Scripting/Empty": [
    "Krampus24/Gameplay/Screen"
  ],
  "AllegroFlare/SystemInfo": [
    "Krampus24/Testing/WithConstructFixture"
  ],
  "AllegroFlare/Testing/WithAllegroFlareFrameworksFullFixture": [
    "Krampus24/Testing/WithConstructFixture"
  ],
  "AllegroFlare/AudioRepositoryElement": [
    "Krampus24/Testing/WithConstructFixture"
  ]
}
</pre>
</body>